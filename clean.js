//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//// SCRIPT DESCRIPTION
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/*
This script cleans the ls_data and site_data directories of any old files
*/ 



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//// REQUIRED MODULES
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const fs = require("fs");



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//// DEFINING PATHS
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Paths can be found from the default.yaml in the config dir

// const proj_paths= config.get('proj_paths')

// const ls_data_rel = proj_paths.ls_data_rel
// const site_data_rel = proj_paths.site_data_rel

//// Using environment variable in docker version for greater convience in simultaneous upload situations

const ls_data_rel = process.env.LS_DOCKER_LS_DATA_REL
const site_data_rel = process.env.LS_DOCKER_SITE_DATA_REL



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//// HELPER FUNTIONS
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Syncronous sleep function implemetation
function sleep(ms) {
    var start = new Date().getTime()
    var expire = start + ms;
    while (new Date().getTime() < expire) { }
    return;
}



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//// DRIVING CODE
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

console.log("Cleaning directories...")

// Delete dirty ls_data if exists
if (fs.existsSync(ls_data_rel)) {
    fs.rmSync(ls_data_rel, {recursive: true, force: true})
} else {
    //console.log("DOES NOT exist:", path);
}

// Delete dirty site_data if exists
if (fs.existsSync(site_data_rel)) {
    fs.rmSync(site_data_rel, {recursive: true, force: true})
} else {
    //console.log("DOES NOT exist:", path);
}


sleep(100)

// Remake Diretories if do not exist

if (!fs.existsSync(ls_data_rel)) {
    fs.mkdirSync(ls_data_rel)
} else {
    console.log("DOES NOT exist:", path);
}

if (!fs.existsSync(site_data_rel)) {
    fs.mkdirSync(site_data_rel)
} else {
    console.log("DOES NOT exist:", path);
}

sleep(100)

// Remake subfolders
if (fs.existsSync(ls_data_rel)) {
    fs.mkdirSync(ls_data_rel + "json")
    fs.mkdirSync(ls_data_rel + "ss")
} else {
    console.log("DOES NOT exist:", path);
}

